<!DOCTYPE html>
<html lang="en"><head>
	<title>Learn C++  » 3.3 — Increment/decrement operators, and side effects » Print</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta name="Robots" content="noindex, nofollow">
			<link rel="stylesheet" href="Learn%20C++%20%C2%BB%203.3%20%E2%80%94%20Increment_decrement%20operators,%20and%20side%20effects%20%C2%BB%20Print_files/print-css.css" type="text/css" media="screen, print">
			<link rel="canonical" href="http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/">
</head>
<body>

<main role="main" class="center">

	
		<header class="entry-header">

			<span class="hat">
				<strong>
					- Learn C++ 
					- 
					<span dir="ltr">http://www.learncpp.com</span> 
					-
				</strong>
			</span>
			
			<div class="code-block code-block-1" style="float:left;margin:8px 8px 8px 0px;"><div class="ABD_display_wrapper ABD_shortcode_571576a3d515d"><div class="ABD_display ABD_display_noadblock"><div class="cf_monitor">
<script src="Learn%20C++%20%C2%BB%203.3%20%E2%80%94%20Increment_decrement%20operators,%20and%20side%20effects%20%C2%BB%20Print_files/ca-pub-0588844875925051.js"></script><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript" src="Learn%20C++%20%C2%BB%203.3%20%E2%80%94%20Increment_decrement%20operators,%20and%20side%20effects%20%C2%BB%20Print_files/show_ads.js">
</script><ins id="aswift_0_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" frameborder="0" height="280" width="336"></iframe></ins></ins>
</div></div><div class="ABD_display ABD_display_adblock" style="display: none;"><div style="width: 336px; height: 280px; display: inline-block; margin: 15px; padding: 15px; border-width: 1px; border-style: solid">
  <p>Hi there.</p>
  
  <p>It looks like you're using an ad blocker.</p>

  <p>That's okay.  But we would like you to know that we are able to keep this content free and updated because we're ad supported.</p>
  
  <p>If you're finding our content valuable, please consider supporting us by disabling your ad blocker for just this site.</p>

  <p>Thanks,</p>

  <p>Alex<br>LearnCpp.com</p>
</div></div></div></div>
			<h1 class="entry-title">
				3.3 — Increment/decrement operators, and side effects			</h1>

			<span class="entry-date">

				Posted By 

				<cite>Alex</cite> 

				On 

				<time>	
					June 13, 2007 @ 8:23 pm 
				</time>

			  	<span>
			  		In 
			  		C++ Tutorial | 
			  	</span>	

		  		<a href="#comments_controls">
		  			64 Comments	  			</a>	  			

				</span>
			
		</header>	

		<div class="entry-content">

			<p>Incrementing (adding 1 to) and decrementing (subtracting 1 from) a
 variable are so common that they have their own operators in C.  There 
are actually two version of each operator -- a prefix version and a 
postfix version.</p>
<table border="1" cellpadding="3" cellspacing="0">
<tbody><tr>
<th>Operator</th>
<th>Symbol</th>
<th>Form</th>
<th>Operation</th>
</tr>
<tr>
<td>Prefix increment (pre-increment)</td>
<td>++</td>
<td>++x</td>
<td>Increment x, then evaluate x</td>
</tr>
<tr>
<td>Prefix decrement (pre-decrement)</td>
<td>––</td>
<td>––x</td>
<td>Decrement x, then evaluate x</td>
</tr>
<tr>
<td>Postfix increment (post-increment)</td>
<td>++</td>
<td>x++</td>
<td>Evaluate x, then increment x</td>
</tr>
<tr>
<td>Postfix decrement (post-decrement)</td>
<td>––</td>
<td>x––</td>
<td>Evaluate x, then decrement x</td>
</tr>
</tbody></table>
<p>The prefix increment/decrement operators are very straightforward.  
The value of x is incremented or decremented, and then x is evaluated.  
For example:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-575158e65c429794272461" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-575158e65c429794272461-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c429794272461-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-575158e65c429794272461-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c429794272461-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-o">++</span><span class="crayon-v">x</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// x is now equal to 6, and 6 is assigned to y</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>The postfix increment/decrement operators are a little more tricky.  
The compiler makes a temporary copy of x, increments or decrements the 
original x (not the copy), and then evaluates the temporary copy of x.  
The temporary copy of x is then discarded.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-575158e65c439058885659" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-575158e65c439058885659-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c439058885659-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-575158e65c439058885659-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c439058885659-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-o">++</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// x is now equal to 6, and 5 is assigned to y</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>Let’s examine how this last line works in more detail.  First, the 
compiler makes a temporary copy of x that starts with the same value as x
 (5).  Then it increments the original x from 5 to 6.  Then the compiler
 evaluates the temporary copy, which evaluates to 5, and assigns that 
value to y.  Then the temporary copy is discarded.</p>
<p>Consequently, y ends up with the value of 5, and x ends up with the value 6.</p>
<p>Here is another example showing the difference between the prefix and postfix versions:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-575158e65c441421752150" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-575158e65c441421752150-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c441421752150-2">2</div><div class="crayon-num" data-line="crayon-575158e65c441421752150-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c441421752150-4">4</div><div class="crayon-num" data-line="crayon-575158e65c441421752150-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c441421752150-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-575158e65c441421752150-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c441421752150-2"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-575158e65c441421752150-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-o">++</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prefix</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c441421752150-4"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-575158e65c441421752150-5"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-o">++</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-o">--</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// postfix</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c441421752150-6"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0119 seconds] -->
<p></p>
<p>This produces the output:</p>
<pre>5 5
6 4
6 4
6 4
7 3
</pre>
<p>On the third line, x and y are incremented/decremented before they 
are evaluated, so their new values are printed by cout.  On the fifth 
line, a temporary copy of the original values (x=6, y=4) is sent to 
cout, and then the original x and y are incremented.  That is why the 
changes from the postfix operators don’t show up until the next line.</p>
<p><em>Rule: Favor pre-increment and pre-decrement over post-increment 
and post-decrement.  The prefix versions are not only more performant, 
you’re less likely to run into strange issues with them.</em></p>
<p><strong>Side effects</strong></p>
<p>A function or expression is said to have a <strong>side effect</strong>
 if it modifies some state (e.g. any stored information in memory), does
 input or output, or calls other functions that have side effects.</p>
<p>Most of the time, side effects are useful:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-575158e65c449008949480" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-575158e65c449008949480-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c449008949480-2">2</div><div class="crayon-num" data-line="crayon-575158e65c449008949480-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-575158e65c449008949480-1"><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c449008949480-2"><span class="crayon-o">++</span><span class="crayon-v">x</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-575158e65c449008949480-3"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>The assignment operator in the above example has the side effect of 
changing the value of x permanently.  Even after the statement has 
finished executing, x will have the value 5.  Operator++ has the side 
effect of incrementing x.  The outputting of x has the side effect of 
modifying the console.</p>
<p>However, side effects can also lead to unexpected results:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-575158e65c450388041320" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-575158e65c450388041320-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c450388041320-2">2</div><div class="crayon-num" data-line="crayon-575158e65c450388041320-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c450388041320-4">4</div><div class="crayon-num" data-line="crayon-575158e65c450388041320-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c450388041320-6">6</div><div class="crayon-num" data-line="crayon-575158e65c450388041320-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c450388041320-8">8</div><div class="crayon-num" data-line="crayon-575158e65c450388041320-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c450388041320-10">10</div><div class="crayon-num" data-line="crayon-575158e65c450388041320-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c450388041320-12">12</div><div class="crayon-num" data-line="crayon-575158e65c450388041320-13">13</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-575158e65c450388041320-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c450388041320-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-575158e65c450388041320-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c450388041320-4"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-575158e65c450388041320-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c450388041320-6"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-575158e65c450388041320-7"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c450388041320-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-575158e65c450388041320-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-t">value</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-o">++</span><span class="crayon-v">x</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// is this 5 + 6, or 6 + 6?&nbsp;&nbsp;It depends on what order your compiler evaluates the function arguments in</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c450388041320-10">&nbsp;</div><div class="crayon-line" id="crayon-575158e65c450388041320-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-t">value</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// value could be 11 or 12, depending on how the above line evaluates!</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c450388041320-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-575158e65c450388041320-13"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0081 seconds] -->
<p></p>
<p>C++ does not define the order in which function arguments are 
evaluated.  If the left argument is evaluated first, this becomes a call
 to add(5, 6), which equals 11.  If the right argument is evaluated 
first, this becomes a call to add(6, 6), which equals 12!  Note that 
this is only a problem because one of the argument to function add() has
 a side effect.</p>
<p>Here’s another popular example:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-575158e65c457122032836" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-575158e65c457122032836-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c457122032836-2">2</div><div class="crayon-num" data-line="crayon-575158e65c457122032836-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c457122032836-4">4</div><div class="crayon-num" data-line="crayon-575158e65c457122032836-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c457122032836-6">6</div><div class="crayon-num" data-line="crayon-575158e65c457122032836-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-575158e65c457122032836-8">8</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-575158e65c457122032836-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c457122032836-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-575158e65c457122032836-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c457122032836-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-o">++</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-575158e65c457122032836-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c457122032836-6">&nbsp;</div><div class="crayon-line" id="crayon-575158e65c457122032836-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-575158e65c457122032836-8"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0102 seconds] -->
<p></p>
<p>What value does this program print?  The answer is: it’s undefined.  
If the ++ is applied to x before the assignment, the answer will be 1.  
If the ++ is applied to x after the assignment, the answer will be 2.</p>
<p>There are other cases where C++ does not specify the order in which 
certain things are evaluated, so different compilers will make different
 assumptions.  Even when C++ does make it clear how things should be 
evaluated, some compilers implement behaviors involving variables with 
side-effects incorrectly.  These problems can generally <em>all</em> be avoided by ensuring that any any variable that has a side-effect applied is used no more than once in a given statement.</p>
<p><em>Rule: Don’t use a variable that has a side effect applied to it more than once in a given statement.</em></p>
<table border="0" cellpadding="3">
<tbody><tr><td>
	<a href="http://www.learncpp.com/cpp-tutorial/34-sizeof-comma-and-conditional-operators/" rel="external"><img src="Learn%20C++%20%C2%BB%203.3%20%E2%80%94%20Increment_decrement%20operators,%20and%20side%20effects%20%C2%BB%20Print_files/next.png" align="middle"> 3.4 -- Sizeof, comma, and conditional operators</a> <sup>[1]</sup>
</td></tr>
<tr><td>
        <a href="http://www.learncpp.com/#Chapter0" rel="external"><img src="Learn%20C++%20%C2%BB%203.3%20%E2%80%94%20Increment_decrement%20operators,%20and%20side%20effects%20%C2%BB%20Print_files/up.png" align="middle"> Index</a> <sup>[2]</sup>
</td></tr>
<tr><td>
	<a href="http://www.learncpp.com/cpp-tutorial/32-arithmetic-operators/" rel="external"><img src="Learn%20C++%20%C2%BB%203.3%20%E2%80%94%20Increment_decrement%20operators,%20and%20side%20effects%20%C2%BB%20Print_files/prev.png" align="middle"> 3.2 -- Arithmetic operators</a> <sup>[3]</sup>
</td></tr>
</tbody></table>

<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a href="http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/?share=email" rel="external"><span>Email</span></a> <sup>[4]</sup></li><li class="share-facebook"><a href="http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/?share=facebook" rel="external"><span>Facebook</span></a> <sup>[5]</sup></li><li class="share-twitter"><a href="http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/?share=twitter" rel="external"><span>Twitter</span></a> <sup>[6]</sup></li><li class="share-google-plus-1"><a href="http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/?share=google-plus-1" rel="external"><span>Google</span></a> <sup>[7]</sup></li><li class="share-pinterest"><a href="http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/?share=pinterest" rel="external"><span>Pinterest</span></a> <sup>[8]</sup></li><li class="share-end"></li></ul></div></div></div><div class="code-block code-block-2" style="float:left;margin:8px 8px 8px 0px;"><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div>
		</div>

		
	<div class="comments">
			</div>
	
	<footer class="footer">
		<p>
			Article printed from 
			Learn C++: 

			<strong dir="ltr">
				http://www.learncpp.com			</strong>
		</p>

		<p>
			URL to article: 
			<strong dir="ltr">
				http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/			</strong>
		</p>
		
					<p>URLs in this post:</p><p style="margin: 2px 0;">[1] Image: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/34-sizeof-comma-and-conditional-operators/</span></b></p><p style="margin: 2px 0;">[2] Image: <b><span dir="ltr">http://www.learncpp.com/#Chapter0</span></b></p><p style="margin: 2px 0;">[3] Image: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/32-arithmetic-operators/</span></b></p><p style="margin: 2px 0;">[4] <span>Email</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/?share=email</span></b></p><p style="margin: 2px 0;">[5] <span>Facebook</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/?share=facebook</span></b></p><p style="margin: 2px 0;">[6] <span>Twitter</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/?share=twitter</span></b></p><p style="margin: 2px 0;">[7] <span>Google</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/?share=google-plus-1</span></b></p><p style="margin: 2px 0;">[8] <span>Pinterest</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/33-incrementdecrement-operators-and-side-effects/?share=pinterest</span></b></p><p></p>
		
		<p style="text-align: right;" id="print-link">
			<a href="#Print" onclick="window.print(); return false;" title="Click here to print.">
				Click 
				here				to print.			</a> 
		</p>

		
		<p style="text-align: center;">
			Copyright © 2015 Learn C++. All rights reserved.		</p>
	</footer>

</main>








</body></html>
<!-- Dynamic page generated in 4.209 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-06-03 02:16:06 -->
<!-- Compression = gzip -->