<!DOCTYPE html>
<html lang="en"><head>
	<title>Learn C++  » 3.8a — Bit flags and bit masks » Print</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta name="Robots" content="noindex, nofollow">
			<link rel="stylesheet" href="Learn%20C++%20%C2%BB%203.8a%20%E2%80%94%20Bit%20flags%20and%20bit%20masks%20%C2%BB%20Print_files/print-css.css" type="text/css" media="screen, print">
			<link rel="canonical" href="http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/">
</head>
<body>

<main role="main" class="center">

	
		<header class="entry-header">

			<span class="hat">
				<strong>
					- Learn C++ 
					- 
					<span dir="ltr">http://www.learncpp.com</span> 
					-
				</strong>
			</span>
			
			<div class="code-block code-block-1" style="float:left;margin:8px 8px 8px 0px;"><div class="ABD_display_wrapper ABD_shortcode_571576a3d515d"><div class="ABD_display ABD_display_noadblock"><div class="cf_monitor">
<script src="Learn%20C++%20%C2%BB%203.8a%20%E2%80%94%20Bit%20flags%20and%20bit%20masks%20%C2%BB%20Print_files/ca-pub-0588844875925051.js"></script><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript" src="Learn%20C++%20%C2%BB%203.8a%20%E2%80%94%20Bit%20flags%20and%20bit%20masks%20%C2%BB%20Print_files/show_ads.js">
</script><ins id="aswift_0_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" frameborder="0" height="280" width="336"></iframe></ins></ins>
</div></div><div class="ABD_display ABD_display_adblock" style="display: none;"><div style="width: 336px; height: 280px; display: inline-block; margin: 15px; padding: 15px; border-width: 1px; border-style: solid">
  <p>Hi there.</p>
  
  <p>It looks like you're using an ad blocker.</p>

  <p>That's okay.  But we would like you to know that we are able to keep this content free and updated because we're ad supported.</p>
  
  <p>If you're finding our content valuable, please consider supporting us by disabling your ad blocker for just this site.</p>

  <p>Thanks,</p>

  <p>Alex<br>LearnCpp.com</p>
</div></div></div></div>
			<h1 class="entry-title">
				3.8a — Bit flags and bit masks			</h1>

			<span class="entry-date">

				Posted By 

				<cite>Alex</cite> 

				On 

				<time>	
					September 8, 2015 @ 9:12 pm 
				</time>

			  	<span>
			  		In 
			  		C++ Tutorial | 
			  	</span>	

		  		<a href="#comments_controls">
		  			64 Comments	  			</a>	  			

				</span>
			
		</header>	

		<div class="entry-content">

			<p>Note: This is a tough lesson.  If you find yourself stuck, you can safely skip this lesson and come back to it later.</p>
<p><strong>Bit flags</strong></p>
<p>Using a whole byte to store a boolean leaves 7 of the 8 bits unused. 
 While this generally is fine, in storage-intensive cases where we have 
lots of related boolean options, it can be useful to “pack” 8 individual
 booleans into a single byte for storage efficiency purposes.  These 
individual bits are called <strong>bit flags</strong>.  Since the bits can’t be accessed directly, we have to use the bitwise operators to set, unset, or query them.</p>
<p>For example:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e4859b085975592" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e4859b085975592-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4859b085975592-2">2</div><div class="crayon-num" data-line="crayon-5751593e4859b085975592-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4859b085975592-4">4</div><div class="crayon-num" data-line="crayon-5751593e4859b085975592-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4859b085975592-6">6</div><div class="crayon-num" data-line="crayon-5751593e4859b085975592-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4859b085975592-8">8</div><div class="crayon-num" data-line="crayon-5751593e4859b085975592-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4859b085975592-10">10</div><div class="crayon-num" data-line="crayon-5751593e4859b085975592-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4859b085975592-12">12</div><div class="crayon-num" data-line="crayon-5751593e4859b085975592-13">13</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e4859b085975592-1"><span class="crayon-c">// Define 8 separate flags (these can represent whatever you want)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4859b085975592-2"><span class="crayon-c">// Note: in C++11, better to use "uint8_t" instead of "unsigned char"</span></div><div class="crayon-line" id="crayon-5751593e4859b085975592-3"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option1</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x01</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// hex for 0000 0001</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4859b085975592-4"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x02</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// hex for 0000 0010</span></div><div class="crayon-line" id="crayon-5751593e4859b085975592-5"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option3</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x04</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// hex for 0000 0100</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4859b085975592-6"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x08</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// hex for 0000 1000</span></div><div class="crayon-line" id="crayon-5751593e4859b085975592-7"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option5</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x10</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// hex for 0001 0000</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4859b085975592-8"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option6</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x20</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// hex for 0010 0000</span></div><div class="crayon-line" id="crayon-5751593e4859b085975592-9"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option7</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x40</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// hex for 0100 0000</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4859b085975592-10"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option8</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x80</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// hex for 1000 0000</span></div><div class="crayon-line" id="crayon-5751593e4859b085975592-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4859b085975592-12"><span class="crayon-c">// byte-size value to hold some combination of the above 8 options</span></div><div class="crayon-line" id="crayon-5751593e4859b085975592-13"><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// all flags/options turned off to start</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0037 seconds] -->
<p></p>
<p>To query a bit state, we use bitwise AND:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e485ae163520383" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e485ae163520383-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e485ae163520383-1"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-c">// if option4 is set, do something</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>To turn a bit on, we use bitwise OR:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e485b6504683082" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e485b6504683082-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e485b6504683082-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e485b6504683082-1"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">|=</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// turn option 4 on.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e485b6504683082-2"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">|=</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-h"> </span><span class="crayon-o">|</span><span class="crayon-h"> </span><span class="crayon-v">option5</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// turn options 4 and 5 on.</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>To turn a bit off, we use bitwise AND with an inverse bit pattern:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e485bc850418125" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e485bc850418125-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e485bc850418125-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e485bc850418125-1"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">&amp;=</span><span class="crayon-h"> </span><span class="crayon-o">~</span><span class="crayon-v">option4</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// turn option 4 off</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e485bc850418125-2"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">&amp;=</span><span class="crayon-h"> </span><span class="crayon-o">~</span><span class="crayon-v">option4</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-o">~</span><span class="crayon-v">option5</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// turn option4 and 5 off.</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>To toggle a bit state, we use bitwise XOR:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e485c9705691704" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e485c9705691704-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e485c9705691704-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e485c9705691704-1"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">^=</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// flip option4 from on to off, or vice versa</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e485c9705691704-2"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">^=</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-h"> </span><span class="crayon-o">|</span><span class="crayon-h"> </span><span class="crayon-v">option5</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// flip options 4 and 5</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>As a real-life example, in OpenGL (a 3d graphics library), some functions take one or more bit flags as a parameter:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e485d0722034549" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e485d0722034549-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e485d0722034549-1"><span class="crayon-e">glClear</span><span class="crayon-sy">(</span><span class="crayon-v">GL_COLOR_BUFFER_BIT</span><span class="crayon-h"> </span><span class="crayon-o">|</span><span class="crayon-h"> </span><span class="crayon-v">GL_DEPTH_BUFFER_BIT</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// clear the color and the depth buffer</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0005 seconds] -->
<p></p>
<p>GL_COLOR_BUFFER_BIT and GL_DEPTH_BUFFER_BIT are defined as follows (in gl2.h):</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e485d7700591523" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e485d7700591523-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e485d7700591523-2">2</div><div class="crayon-num" data-line="crayon-5751593e485d7700591523-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e485d7700591523-1"><span class="crayon-p">#define GL_DEPTH_BUFFER_BIT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0x00000100</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e485d7700591523-2"><span class="crayon-p">#define GL_STENCIL_BUFFER_BIT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0x00000400</span></div><div class="crayon-line" id="crayon-5751593e485d7700591523-3"><span class="crayon-p">#define GL_COLOR_BUFFER_BIT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0x00004000</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p></p>
<p><strong>Why are bit flags useful?</strong></p>
<p>Astute readers will note that the above myflags example actually 
doesn’t save any memory.  8 booleans would normally take 8 bytes.  But 
the above example uses 9 bytes (8 bytes to define the options, and 1 
bytes for the bit flag)!  So why would you actually want to use bit 
flags?</p>
<p>Bit flags are typically used in two cases:</p>
<p>1) When you have many sets of identical bitflags.</p>
<p>Instead of a single myflags variable, consider the case where you 
have two myflags variables: myflags1 and myflags2, each of which can 
store 8 options.  If you defined these as two separate sets of booleans,
 you’d need 16 booleans, and thus 16 bytes.  However, using bit flags, 
the memory cost is only 10 (8 bytes to define the options, and 1 byte 
for each myflags variable).  With 100 myflag variables, your memory cost
 would be 108 bytes instead of 800.  The more identical variables you 
need, the more substantial your memory savings.</p>
<p>Let’s take a look at a more concrete example.  Imagine you’re 
creating game where there are monsters for the player to fight.  When a 
monster is created, it may be resistant to certain types of attacks 
(chosen at random).  The different type of attacks in the game are: 
poison, lightning, fire, cold, theft, acid, paralysis, and blindness.</p>
<p>In order to track which types of attacks the monster is resistant to,
 we can use one boolean value per resistance (per monster).  That’s 8 
booleans per monster.</p>
<p>With 100 monsters, that would take 800 boolean variables, using 800 bytes of memory.</p>
<p>However, using bit flags:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e485df318728176" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e485df318728176-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e485df318728176-2">2</div><div class="crayon-num" data-line="crayon-5751593e485df318728176-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e485df318728176-4">4</div><div class="crayon-num" data-line="crayon-5751593e485df318728176-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e485df318728176-6">6</div><div class="crayon-num" data-line="crayon-5751593e485df318728176-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e485df318728176-8">8</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e485df318728176-1"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">resistsPoison</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x01</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e485df318728176-2"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">resistsLightning</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x02</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e485df318728176-3"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">resistsFire</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x04</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e485df318728176-4"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">resistsCold</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x08</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e485df318728176-5"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">resistsTheft</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x10</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e485df318728176-6"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">resistsAcid</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x20</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e485df318728176-7"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">resistsParalysis</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x40</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e485df318728176-8"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">resistsBlindness</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x80</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0027 seconds] -->
<p></p>
<p>Using bit flags, we only need one byte to store the resistances for a
 single monster, plus a one-time setup fee of 8 bytes for the options.</p>
<p>With 100 monsters, that would take 108 bytes total, or approximately 8 times less memory.</p>
<p>For most programs, the amount of memory using bit flags saved is not 
worth the added complexity.  But in programs where there are tens of 
thousands or even millions of similar objects, using bit flags can 
reduce memory use substantially.  It’s a useful optimization to have in 
your toolkit if you need it.</p>
<p>2) Imagine you had a function that could take any combination of 32 
different options.  One way to write that function would be to use 32 
individual boolean parameters:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e485e7170342502" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e485e7170342502-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e485e7170342502-1"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">someFunction</span><span class="crayon-sy">(</span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option6</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option7</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option8</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option9</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option10</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option11</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option12</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option13</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option14</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option15</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option16</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option17</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option18</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option19</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option20</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option21</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option22</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option23</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option24</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option25</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option26</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option27</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option28</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option29</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option30</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option31</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">option32</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0042 seconds] -->
<p></p>
<p>Hopefully you’d give your parameters more descriptive names, but the 
point here is to show you how obnoxiously long the parameter list is.</p>
<p>Then when you wanted to call the function with options 10 and 32 set to true, you’d have to do so like this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e485ee893315287" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e485ee893315287-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e485ee893315287-1"><span class="crayon-e">someFunction</span><span class="crayon-sy">(</span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">true</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">true</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0025 seconds] -->
<p></p>
<p>This is ridiculously difficult to read (is that option 9, 10, or 11 
that’s set to true?), and also means you have to remember which 
parameters corresponds to which option (is setting the edit flag the 
9th, 10th, or 11th parameter?)  It may also not be very performant, as 
every function call has to copy 32 booleans from the caller to the 
function.</p>
<p>Instead, if you defined the function using bit flags like this:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e485fb678647460" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e485fb678647460-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e485fb678647460-1"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">someFunction</span><span class="crayon-sy">(</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">options</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0005 seconds] -->
<p></p>
<p>Then you could use bit flags to pass in only the options you wanted:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e48602140991984" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e48602140991984-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e48602140991984-1"><span class="crayon-e">someFunction</span><span class="crayon-sy">(</span><span class="crayon-v">option10</span><span class="crayon-h"> </span><span class="crayon-o">|</span><span class="crayon-h"> </span><span class="crayon-v">option32</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p></p>
<p>Not only is this much more readable, it’s likely to be more 
performant as well, since it only involves 2 operations (one bitwise OR 
and one parameter copy).</p>
<p>This is one of the reasons OpenGL opted to use bitflag parameters instead of many consecutive booleans.</p>
<p>Also, if you have unused bit flags and need to add options later, you
 can just define the bit flag.  There’s no need to change the function 
prototype, which is good for backwards compatibility.</p>
<p><strong>An introduction to std::bitset</strong></p>
<p>All of this bit flipping is exhausting, isn’t it?  Fortunately, the 
C++ standard library comes with functionality called std::bitset that 
helps us manage bit flags.</p>
<p>To create a std::bitset, you need to include the bitset header, and 
then define a std::bitset variable indicating how many bits are needed. 
 The number of bits must be a compile time constant.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e48609175602887" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e48609175602887-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48609175602887-2">2</div><div class="crayon-num" data-line="crayon-5751593e48609175602887-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e48609175602887-1"><span class="crayon-p">#include &lt;bitset&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48609175602887-2">&nbsp;</div><div class="crayon-line" id="crayon-5751593e48609175602887-3"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">bitset</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">bits</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// we need 8 bits</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>If desired, the bitset can be initialized with an initial set of values:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e48610870170748" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e48610870170748-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48610870170748-2">2</div><div class="crayon-num" data-line="crayon-5751593e48610870170748-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48610870170748-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e48610870170748-1"><span class="crayon-p">#include &lt;bitset&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48610870170748-2">&nbsp;</div><div class="crayon-line" id="crayon-5751593e48610870170748-3"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">bitset</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-e">bits</span><span class="crayon-sy">(</span><span class="crayon-v">option1</span><span class="crayon-h"> </span><span class="crayon-o">|</span><span class="crayon-h"> </span><span class="crayon-v">option2</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// start with option 1 and 2 turned on</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48610870170748-4"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">bitset</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-e">morebits</span><span class="crayon-sy">(</span><span class="crayon-cn">0x3</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// start with bit pattern 0000 0011</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0012 seconds] -->
<p></p>
<p>Note that our initialization value is interpreted as binary.  Since 
we pass in the value 3, the std::bitset will start with the binary value
 for 3 (0000 0011).</p>
<p>std::bitset provides 4 key functions:</p>
<ul>
<li>test() allows us to query whether a bit is a 0 or 1</li>
<li>set() allows us to turn a bit on (this will do nothing if the bit is already on)</li>
<li>reset() allows us to turn a bit off (this will do nothing if the bit is already off)</li>
<li>flip() allows us to flip a bit from a 0 to a 1 or vice versa</li>
</ul>
<p>Each of these functions takes a bit-position parameter indicating 
which bit should be operated on.  The position of the rightmost bit is 
0, increasing with each successive bit to the left.  Giving descriptive 
names to the bit indices can be useful here (either by assigning them to
 const variables, or using enums, which we’ll introduce in the next 
chapter).</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e48617239412535" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e48617239412535-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-2">2</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-4">4</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-6">6</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-8">8</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-10">10</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-12">12</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-14">14</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-16">16</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-18">18</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-20">20</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-22">22</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-24">24</div><div class="crayon-num" data-line="crayon-5751593e48617239412535-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48617239412535-26">26</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e48617239412535-1"><span class="crayon-p">#include &lt;bitset&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-2"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line" id="crayon-5751593e48617239412535-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-4"><span class="crayon-c">// Note that with std::bitset, our options correspond to bit numbers, not bit patterns</span></div><div class="crayon-line" id="crayon-5751593e48617239412535-5"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">option_1</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-6"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">option_2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e48617239412535-7"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">option_3</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-8"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">option_4</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e48617239412535-9"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">option_5</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">4</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-10"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">option_6</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e48617239412535-11"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">option_7</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">6</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-12"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">option_8</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">7</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e48617239412535-13">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-14"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751593e48617239412535-15"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">bitset</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-e">bits</span><span class="crayon-sy">(</span><span class="crayon-cn">0x2</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// we need 8 bits, start with bit pattern 0000 0010</span></div><div class="crayon-line" id="crayon-5751593e48617239412535-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">bits</span><span class="crayon-sy">.</span><span class="crayon-e">set</span><span class="crayon-sy">(</span><span class="crayon-v">option_5</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// set bit 4 to 1 (now we have 0001 0010)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">bits</span><span class="crayon-sy">.</span><span class="crayon-e">flip</span><span class="crayon-sy">(</span><span class="crayon-v">option_6</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// flip bit 5 (now we have 0011 0010)</span></div><div class="crayon-line" id="crayon-5751593e48617239412535-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">bits</span><span class="crayon-sy">.</span><span class="crayon-e">reset</span><span class="crayon-sy">(</span><span class="crayon-v">option_6</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// set bit 5 back to 0 (now we have 0001 0010)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-20">&nbsp;</div><div class="crayon-line" id="crayon-5751593e48617239412535-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Bit 4 has value: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">bits</span><span class="crayon-sy">.</span><span class="crayon-e">test</span><span class="crayon-sy">(</span><span class="crayon-v">option_5</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">'\n'</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Bit 5 has value: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">bits</span><span class="crayon-sy">.</span><span class="crayon-e">test</span><span class="crayon-sy">(</span><span class="crayon-v">option_6</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">'\n'</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e48617239412535-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"All the bits: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">bits</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">'\n'</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-24">&nbsp;</div><div class="crayon-line" id="crayon-5751593e48617239412535-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48617239412535-26"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0114 seconds] -->
<p></p>
<p>This prints:</p>
<pre>Bit 4 has value: 1
Bit 5 has value: 0
All the bits: 00010010
</pre>
<p>Note that sending the bitset variable to std::cout prints the value of all the bits in the bitset.</p>
<p>Remember that the initialization value for a bitset is treated as binary, whereas the bitset functions use bit positions!</p>
<p>We recommend using std::bitset instead of doing all the bit 
operations manually, as bitset is more convenient and less error prone.</p>
<p>(h/t to reader “Mr. D”)</p>
<p><strong>Bit masks</strong></p>
<p>The principles for bit flags can be extended to turn on, turn off, 
toggle, or query multiple bits at once, in a bit single operation.  When
 we bundle individual bits together for the purpose of modifying them as
 a group, this is called a <strong>bit mask</strong>.</p>
<p>Let’s take a look at a sample program using bit masks.  In the 
following program, we ask the user to enter a number.  We then use a bit
 mask to keep only the low 4 bits, which we print the value of.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e48620497723276" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e48620497723276-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48620497723276-2">2</div><div class="crayon-num" data-line="crayon-5751593e48620497723276-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48620497723276-4">4</div><div class="crayon-num" data-line="crayon-5751593e48620497723276-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48620497723276-6">6</div><div class="crayon-num" data-line="crayon-5751593e48620497723276-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48620497723276-8">8</div><div class="crayon-num" data-line="crayon-5751593e48620497723276-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48620497723276-10">10</div><div class="crayon-num" data-line="crayon-5751593e48620497723276-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48620497723276-12">12</div><div class="crayon-num" data-line="crayon-5751593e48620497723276-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48620497723276-14">14</div><div class="crayon-num" data-line="crayon-5751593e48620497723276-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48620497723276-16">16</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e48620497723276-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48620497723276-2">&nbsp;</div><div class="crayon-line" id="crayon-5751593e48620497723276-3"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48620497723276-4"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-5751593e48620497723276-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">lowMask</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0xF</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// bit mask to keep low 4 bits (hex for 0000 0000 0000 1111)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48620497723276-6">&nbsp;</div><div class="crayon-line" id="crayon-5751593e48620497723276-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter an integer: "</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48620497723276-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">num</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e48620497723276-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">num</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48620497723276-10">&nbsp;</div><div class="crayon-line" id="crayon-5751593e48620497723276-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">num</span><span class="crayon-h"> </span><span class="crayon-o">&amp;=</span><span class="crayon-h"> </span><span class="crayon-v">lowMask</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// remove the high bits to leave only the low bits</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48620497723276-12">&nbsp;</div><div class="crayon-line" id="crayon-5751593e48620497723276-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"The 4 low bits have value: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">num</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">'\n'</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48620497723276-14">&nbsp;</div><div class="crayon-line" id="crayon-5751593e48620497723276-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48620497723276-16"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0022 seconds] -->
<p></p>
<pre>Enter an integer: 151
The 4 low bits have value: 7
</pre>
<p>151 is 1001 0111 in binary.  lowMask is 0000 1111 in 8-bit binary.  1001 0111 &amp; 0000 1111 = 0000 0111, which is 7 decimal.</p>
<p>Although this example is pretty contrived, the important thing to note is that we modified multiple bits in one operation!</p>
<p><strong>An RGBA color example</strong></p>
<p>Now lets take a look at a more complicated example.</p>
<p>Color display devices such as TVs and monitors are composed of 
millions of pixels, each of which can display a dot of color.  The dot 
of color is composed from three beams of light: one red, one green, and 
one blue (RGB).  By varying the intensity of the colors, any color on 
the color spectrum can be made.  Typically, the amount of R, G, and B 
for a given pixel is represented by an 8-bit unsigned integer.  For 
example, a red pixel would have R=255, G=0, B=0.  A purple pixel would 
have R=255, G=0, B=255.  A medium-grey pixel would have R=127, G=127, 
B=127.</p>
<p>When assigning color values to a pixel, in addition to R, G, and B, a
 4th value called A is often used.  “A” stands for “alpha”, and it 
controls how transparent the color is.  If A=0, the color is fully 
transparent.  If A=255, the color is opaque.</p>
<p>R, G, B, and A are normally stored as a single 32-bit integer, with 8 bits used for each component:</p>
<table border="1" cellpadding="0" cellspacing="0">
<tbody><tr>
<td colspan="4" style="text-align:center">32-bit RGBA value</td>
</tr>
<tr>
<td>bits 31-24</td>
<td>bits 23-16</td>
<td>bits 15-8</td>
<td>bits 7-0</td>
</tr>
<tr>
<td>RRRRRRRR</td>
<td>GGGGGGGG</td>
<td>BBBBBBBB</td>
<td>AAAAAAAA</td>
</tr>
<tr>
<td>red</td>
<td>green</td>
<td>blue</td>
<td>alpha</td>
</tr>
</tbody></table>
<p>The following program asks the user to enter a 32-bit hexadecimal 
value, and then extracts the 8-bit color values for R, G, B, and A.  If 
you need a reminder about what hexadecimal numbers are, see section <a href="http://www.learncpp.com/cpp-tutorial/28-literals/" rel="external">2.8 -- literals</a> <sup>[1]</sup>.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e4862f794498804" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e4862f794498804-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-2">2</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-4">4</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-6">6</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-8">8</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-10">10</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-12">12</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-14">14</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-16">16</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-18">18</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-20">20</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-22">22</div><div class="crayon-num" data-line="crayon-5751593e4862f794498804-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4862f794498804-24">24</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e4862f794498804-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751593e4862f794498804-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">redBits</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0xFF000000</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e4862f794498804-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">greenBits</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x00FF0000</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">blueBits</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x0000FF00</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e4862f794498804-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">alphaBits</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x000000FF</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-8">&nbsp;</div><div class="crayon-line" id="crayon-5751593e4862f794498804-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter a 32-bit RGBA color value in hexadecimal (e.g. FF7F3300): "</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">pixel</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e4862f794498804-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">hex</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">pixel</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// std::hex allows us to read in a hex value</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-12">&nbsp;</div><div class="crayon-line" id="crayon-5751593e4862f794498804-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// use bitwise AND to isolate red pixels, then right shift the value into the range 0-255</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">red</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">pixel</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-v">redBits</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">24</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e4862f794498804-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">green</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">pixel</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-v">greenBits</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">16</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">blue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">pixel</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-v">blueBits</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">8</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e4862f794498804-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">alpha</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">pixel</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-v">alphaBits</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-18">&nbsp;</div><div class="crayon-line" id="crayon-5751593e4862f794498804-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Your color contains:\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">static_cast</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-o">&gt;</span><span class="crayon-sy">(</span><span class="crayon-v">red</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" of 255 red\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e4862f794498804-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">static_cast</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-o">&gt;</span><span class="crayon-sy">(</span><span class="crayon-v">green</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" of 255 green\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">static_cast</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-o">&gt;</span><span class="crayon-sy">(</span><span class="crayon-v">blue</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" of 255 blue\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e4862f794498804-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">static_cast</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-o">&gt;</span><span class="crayon-sy">(</span><span class="crayon-v">alpha</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" of 255 alpha\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4862f794498804-24"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0067 seconds] -->
<p></p>
<p>This produces the output:</p>
<pre>Enter a 32-bit RGBA color value in hexadecimal (e.g. FF7F3300): FF7F3300
Your color contains:
255 of 255 red
127 of 255 green
51 of 255 blue
0 of 255 alpha
</pre>
<p>In the above program, we use a bitwise AND to query the set of 8 bits
 we’re interested in, and then we right shift them to move them to the 
range of 0-255 for storage and printing.</p>
<p>As a side note, different machine architectures may store bytes in a 
different order.  RGBA can be stored as ARGB or BGRA depending on the 
architecture.</p>
<p><strong>Summary</strong></p>
<p>Summarizing how to set, unset, toggle, and query bit flags:</p>
<p>To query bit states, we use bitwise AND:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e48638152794918" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e48638152794918-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e48638152794918-1"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-c">// if option4 is set, do something</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>To turn bits on, we use bitwise OR:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e48644208471385" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e48644208471385-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48644208471385-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e48644208471385-1"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">|=</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// turn option 4 on.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48644208471385-2"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">|=</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-h"> </span><span class="crayon-o">|</span><span class="crayon-h"> </span><span class="crayon-v">option5</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// turn options 4 and 5 on.</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>To turn bits off, we use bitwise AND with an inverse bit pattern:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e4864b894287462" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e4864b894287462-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e4864b894287462-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e4864b894287462-1"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">&amp;=</span><span class="crayon-h"> </span><span class="crayon-o">~</span><span class="crayon-v">option4</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// turn option 4 off</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e4864b894287462-2"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">&amp;=</span><span class="crayon-h"> </span><span class="crayon-o">~</span><span class="crayon-v">option4</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-o">~</span><span class="crayon-v">option5</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// turn option4 and 5 off.</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>To toggle bit states, we use bitwise XOR:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e48652360351791" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e48652360351791-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48652360351791-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e48652360351791-1"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">^=</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// flip option4 from on to off, or vice versa</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48652360351791-2"><span class="crayon-v">myflags</span><span class="crayon-h"> </span><span class="crayon-o">^=</span><span class="crayon-h"> </span><span class="crayon-v">option4</span><span class="crayon-h"> </span><span class="crayon-o">|</span><span class="crayon-h"> </span><span class="crayon-v">option5</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// flip options 4 and 5</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p><strong>Quiz</strong></p>
<p>1) Given the following program:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751593e48658933034469" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751593e48658933034469-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48658933034469-2">2</div><div class="crayon-num" data-line="crayon-5751593e48658933034469-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48658933034469-4">4</div><div class="crayon-num" data-line="crayon-5751593e48658933034469-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48658933034469-6">6</div><div class="crayon-num" data-line="crayon-5751593e48658933034469-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48658933034469-8">8</div><div class="crayon-num" data-line="crayon-5751593e48658933034469-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751593e48658933034469-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751593e48658933034469-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48658933034469-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-5751593e48658933034469-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option_viewed</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x01</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48658933034469-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option_edited</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x02</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e48658933034469-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option_favorited</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x04</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48658933034469-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option_shared</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x08</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751593e48658933034469-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">option_deleted</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0x80</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48658933034469-8">&nbsp;</div><div class="crayon-line" id="crayon-5751593e48658933034469-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">myArticleFlags</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751593e48658933034469-10"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p></p>
<p>1a) Write a line of code to set the article as viewed.<br>
1b) Write a line of code to check if the article was deleted.<br>
1c) Write a line of code to unset the article as a favorite.</p>
<p><strong>Quiz answers</strong></p>
<p>1a) <a href="http://www.learncpp.comjavascript:void%280%29" rel="external">Show Solution</a> <sup>[2]</sup></p>
<div class="solution_div" id="id1916761005" style="display:none">
myArticleFlags |= option_viewed;
</div>
<p>1b) <a href="http://www.learncpp.comjavascript:void%280%29" rel="external">Show Solution</a> <sup>[2]</sup></p>
<div class="solution_div" id="id1103352939" style="display:none">
if (myArticleFlags &amp; option_deleted) …
</div>
<p>1c) <a href="http://www.learncpp.comjavascript:void%280%29" rel="external">Show Solution</a> <sup>[2]</sup></p>
<div class="solution_div" id="id441181648" style="display:none">
myArticleFlags &amp;= ~option_favorited;
</div>
<table border="0" cellpadding="3">
<tbody><tr><td>
	<a href="http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/" rel="external"><img src="Learn%20C++%20%C2%BB%203.8a%20%E2%80%94%20Bit%20flags%20and%20bit%20masks%20%C2%BB%20Print_files/next.png" align="middle"> 3.x -- Chapter 3 comprehensive quiz</a> <sup>[3]</sup>
</td></tr>
<tr><td>
        <a href="http://www.learncpp.com/#Chapter0" rel="external"><img src="Learn%20C++%20%C2%BB%203.8a%20%E2%80%94%20Bit%20flags%20and%20bit%20masks%20%C2%BB%20Print_files/up.png" align="middle"> Index</a> <sup>[4]</sup>
</td></tr>
<tr><td>
	<a href="http://www.learncpp.com/cpp-tutorial/38-bitwise-operators/" rel="external"><img src="Learn%20C++%20%C2%BB%203.8a%20%E2%80%94%20Bit%20flags%20and%20bit%20masks%20%C2%BB%20Print_files/prev.png" align="middle"> 3.8 -- Bitwise operators</a> <sup>[5]</sup>
</td></tr>
</tbody></table>

<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a href="http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/?share=email" rel="external"><span>Email</span></a> <sup>[6]</sup></li><li class="share-facebook"><a href="http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/?share=facebook" rel="external"><span>Facebook</span></a> <sup>[7]</sup></li><li class="share-twitter"><a href="http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/?share=twitter" rel="external"><span>Twitter</span></a> <sup>[8]</sup></li><li class="share-google-plus-1"><a href="http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/?share=google-plus-1" rel="external"><span>Google</span></a> <sup>[9]</sup></li><li class="share-pinterest"><a href="http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/?share=pinterest" rel="external"><span>Pinterest</span></a> <sup>[10]</sup></li><li class="share-end"></li></ul></div></div></div><div class="code-block code-block-2" style="float:left;margin:8px 8px 8px 0px;"><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div>
		</div>

		
	<div class="comments">
			</div>
	
	<footer class="footer">
		<p>
			Article printed from 
			Learn C++: 

			<strong dir="ltr">
				http://www.learncpp.com			</strong>
		</p>

		<p>
			URL to article: 
			<strong dir="ltr">
				http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/			</strong>
		</p>
		
					<p>URLs in this post:</p><p style="margin: 2px 0;">[1] 2.8 -- literals: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/28-literals/</span></b></p><p style="margin: 2px 0;">[2] Show Solution: <b><span dir="ltr">http://www.learncpp.comjavascript:void(0)</span></b></p><p style="margin: 2px 0;">[3] Image: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/</span></b></p><p style="margin: 2px 0;">[4] Image: <b><span dir="ltr">http://www.learncpp.com/#Chapter0</span></b></p><p style="margin: 2px 0;">[5] Image: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/38-bitwise-operators/</span></b></p><p style="margin: 2px 0;">[6] <span>Email</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/?share=email</span></b></p><p style="margin: 2px 0;">[7] <span>Facebook</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/?share=facebook</span></b></p><p style="margin: 2px 0;">[8] <span>Twitter</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/?share=twitter</span></b></p><p style="margin: 2px 0;">[9] <span>Google</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/?share=google-plus-1</span></b></p><p style="margin: 2px 0;">[10] <span>Pinterest</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/?share=pinterest</span></b></p><p></p>
		
		<p style="text-align: right;" id="print-link">
			<a href="#Print" onclick="window.print(); return false;" title="Click here to print.">
				Click 
				here				to print.			</a> 
		</p>

		
		<p style="text-align: center;">
			Copyright © 2015 Learn C++. All rights reserved.		</p>
	</footer>

</main>








</body></html>
<!-- Dynamic page generated in 2.957 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-06-03 02:17:35 -->
<!-- Compression = gzip -->