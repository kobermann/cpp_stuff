<!DOCTYPE html>
<html lang="en"><head>
	<title>Learn C++  » 3.5 — Relational operators (comparisons) » Print</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta name="Robots" content="noindex, nofollow">
			<link rel="stylesheet" href="Learn%20C++%20%C2%BB%203.5%20%E2%80%94%20Relational%20operators%20%28comparisons%29%20%C2%BB%20Print_files/print-css.css" type="text/css" media="screen, print">
			<link rel="canonical" href="http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/">
</head>
<body>

<main role="main" class="center">

	
		<header class="entry-header">

			<span class="hat">
				<strong>
					- Learn C++ 
					- 
					<span dir="ltr">http://www.learncpp.com</span> 
					-
				</strong>
			</span>
			
			<div class="code-block code-block-1" style="float:left;margin:8px 8px 8px 0px;"><div class="ABD_display_wrapper ABD_shortcode_571576a3d515d"><div class="ABD_display ABD_display_noadblock"><div class="cf_monitor">
<script src="Learn%20C++%20%C2%BB%203.5%20%E2%80%94%20Relational%20operators%20%28comparisons%29%20%C2%BB%20Print_files/ca-pub-0588844875925051.js"></script><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript" src="Learn%20C++%20%C2%BB%203.5%20%E2%80%94%20Relational%20operators%20%28comparisons%29%20%C2%BB%20Print_files/show_ads.js">
</script><ins id="aswift_0_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" frameborder="0" height="280" width="336"></iframe></ins></ins>
</div></div><div class="ABD_display ABD_display_adblock" style="display: none;"><div style="width: 336px; height: 280px; display: inline-block; margin: 15px; padding: 15px; border-width: 1px; border-style: solid">
  <p>Hi there.</p>
  
  <p>It looks like you're using an ad blocker.</p>

  <p>That's okay.  But we would like you to know that we are able to keep this content free and updated because we're ad supported.</p>
  
  <p>If you're finding our content valuable, please consider supporting us by disabling your ad blocker for just this site.</p>

  <p>Thanks,</p>

  <p>Alex<br>LearnCpp.com</p>
</div></div></div></div>
			<h1 class="entry-title">
				3.5 — Relational operators (comparisons)			</h1>

			<span class="entry-date">

				Posted By 

				<cite>Alex</cite> 

				On 

				<time>	
					June 15, 2007 @ 10:43 am 
				</time>

			  	<span>
			  		In 
			  		C++ Tutorial | 
			  	</span>	

		  		<a href="#comments_controls">
		  			49 Comments	  			</a>	  			

				</span>
			
		</header>	

		<div class="entry-content">

			<p>There are 6 relational operators:</p>
<table border="1" cellpadding="3" cellspacing="0">
<tbody><tr>
<th>Operator</th>
<th>Symbol</th>
<th>Form</th>
<th>Operation</th>
</tr>
<tr>
<td>Greater than</td>
<td>&gt;</td>
<td>x &gt; y</td>
<td>true if x is greater than y, false otherwise</td>
</tr>
<tr>
<td>Less than</td>
<td>&lt;</td>
<td>x &lt; y</td>
<td>true if x is less than y, false otherwise</td>
</tr>
<tr>
<td>Greater than or equals</td>
<td>&gt;=</td>
<td>x &gt;= y</td>
<td>true if x is greater than or equal to y, false otherwise</td>
</tr>
<tr>
<td>Less than or equals</td>
<td>&lt;=</td>
<td>x &lt;= y</td>
<td>true if x is less than or equal to y, false otherwise</td>
</tr>
<tr>
<td>Equality</td>
<td>==</td>
<td>x == y</td>
<td>true if x equals y, false otherwise</td>
</tr>
<tr>
<td>Inequality</td>
<td>!=</td>
<td>x != y</td>
<td>true if x does not equal y, false otherwise</td>
</tr>
</tbody></table>
<p>You have already seen how all of these work, and they are pretty 
intuitive.  Each of these operators evaluates to the boolean value true 
(1), or false (0).</p>
<p>Here’s some sample code using these operators with integers:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751590e9dc4f065543416" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-2">2</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-4">4</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-6">6</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-8">8</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-10">10</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-12">12</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-14">14</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-16">16</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-18">18</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-20">20</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-22">22</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-24">24</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc4f065543416-26">26</div><div class="crayon-num" data-line="crayon-5751590e9dc4f065543416-27">27</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751590e9dc4f065543416-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-2">&nbsp;</div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-3"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-4"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter an integer: "</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-8">&nbsp;</div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter another integer: "</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-12">&nbsp;</div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" equals "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">!=</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" does not equal "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is greater than "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is less than "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&gt;=</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is greater than or equal to "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;=</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is less than or equal to "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-25">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc4f065543416-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc4f065543416-27"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0062 seconds] -->
<p></p>
<p>And the results from a sample run:</p>
<pre>Enter an integer: 4
Enter another integer: 5
4 does not equal 5
4 is less than 5
4 is less than or equal to 5
</pre>
<p>These operators are extremely straightforward to use when comparing integers.</p>
<p><strong>Comparison of floating point values</strong></p>
<p>Directly comparing floating point values using any of these operators
 is dangerous.  This is because small rounding errors in the floating 
point operands may cause unexpected results.  We discuss rounding errors
 in detail in section <a href="http://www.learncpp.com/cpp-tutorial/25-floating-point-numbers/" rel="external">2.5 -- floating point numbers</a> <sup>[1]</sup>.</p>
<p>Here’s an example of rounding errors causing unexpected results:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751590e9dc68675407434" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751590e9dc68675407434-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc68675407434-2">2</div><div class="crayon-num" data-line="crayon-5751590e9dc68675407434-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc68675407434-4">4</div><div class="crayon-num" data-line="crayon-5751590e9dc68675407434-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc68675407434-6">6</div><div class="crayon-num" data-line="crayon-5751590e9dc68675407434-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc68675407434-8">8</div><div class="crayon-num" data-line="crayon-5751590e9dc68675407434-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc68675407434-10">10</div><div class="crayon-num" data-line="crayon-5751590e9dc68675407434-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc68675407434-12">12</div><div class="crayon-num" data-line="crayon-5751590e9dc68675407434-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc68675407434-14">14</div><div class="crayon-num" data-line="crayon-5751590e9dc68675407434-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc68675407434-16">16</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751590e9dc68675407434-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc68675407434-2">&nbsp;</div><div class="crayon-line" id="crayon-5751590e9dc68675407434-3"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc68675407434-4"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-5751590e9dc68675407434-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-e">d1</span><span class="crayon-sy">(</span><span class="crayon-cn">100</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">99.99</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// should equal 0.01</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc68675407434-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-e">d2</span><span class="crayon-sy">(</span><span class="crayon-cn">10</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">9.99</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// should equal 0.01</span></div><div class="crayon-line" id="crayon-5751590e9dc68675407434-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc68675407434-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">d1</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-v">d2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751590e9dc68675407434-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"d1 == d2"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc68675407434-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">d1</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">d2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751590e9dc68675407434-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"d1 &gt; d2"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc68675407434-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">d1</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">d2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751590e9dc68675407434-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"d1 &lt; d2"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc68675407434-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-5751590e9dc68675407434-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc68675407434-16"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0030 seconds] -->
<p></p>
<p>This program prints an unexpected result:</p>
<pre>d1 &gt; d2
</pre>
<p>In the above program, d1 = 0.0100000000000005116 and d2 = 
0.0099999999999997868.  Both numbers are close to 0.1, but d1 is greater
 than, and d2 is less than.  And neither are equal.</p>
<p>Sometimes the need to do floating point comparisons is unavoidable.  
In this case, the less than and greater than operators (&gt;, &gt;=, 
&lt;, and &lt;=) are often used with floating point values as normal. 
The operators will produce the correct result most of the time, only 
potentially failing when the two operands are close. Due to the way 
these operators tend to be used, a wrong result often only has slight 
consequences.

The equality operator is much more troublesome since even the smallest 
of rounding errors makes it completely inaccurate.  Consequently, using 
operator== or operator!= on floating point numbers is not advised.  The 
most common method of doing floating point equality involves using a 
function that calculates how close the two values are to each other.  If
 the two numbers are "close enough", then we call them equal.  The value
 used to represent "close enough" is traditionally called <strong>epsilon</strong>.  Epsilon is generally defined as a small number (e.g. 0.0000001).</p>
<p>New developers often try to write their own “close enough” function like this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751590e9dc77996645857" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751590e9dc77996645857-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc77996645857-2">2</div><div class="crayon-num" data-line="crayon-5751590e9dc77996645857-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc77996645857-4">4</div><div class="crayon-num" data-line="crayon-5751590e9dc77996645857-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc77996645857-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751590e9dc77996645857-1"><span class="crayon-p">#include &lt;cmath&gt; // for fabs()</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc77996645857-2"><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-e">isAlmostEqual</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">a</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">epsilon</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751590e9dc77996645857-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc77996645857-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// if the distance between a and b is less than epsilon, then a and b are "close enough"</span></div><div class="crayon-line" id="crayon-5751590e9dc77996645857-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;=</span><span class="crayon-h"> </span><span class="crayon-v">epsilon</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc77996645857-6"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0012 seconds] -->
<p></p>
<p>fabs() is a function in the &lt;cmath&gt; library that returns the 
absolute value of its parameter.  fabs(a - b) returns the distance 
between a and b as a positive number.  This function checks if the 
distance between a and b is less than whatever epsilon value 
representing “close enough” was passed in.  If a and b are close enough,
 the function returns true.</p>
<p>While this works, it’s not great.  An epsilon of 0.00001 is good for 
inputs around 1.0, too big for numbers around 0.0000001, and too small 
for numbers like 10,000.  This means every time we call this function, 
we have to pick an epsilon that’s appropriate for our inputs.  If we 
know we’re going to have to scale epsilon in proportion to our inputs, 
we might as well modify the function to do that for us.</p>
<p><a href="http://en.wikipedia.org/wiki/Donald_Knuth" rel="external">Donald Knuth</a> <sup>[2]</sup>,
 a famous computer scientist, suggested the following method in his book
 “The Art of Computer Programming, Volume II: Seminumerical Algorithms 
(Addison-Wesley, 1969)”:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751590e9dc84559397024" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751590e9dc84559397024-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc84559397024-2">2</div><div class="crayon-num" data-line="crayon-5751590e9dc84559397024-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc84559397024-4">4</div><div class="crayon-num" data-line="crayon-5751590e9dc84559397024-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc84559397024-6">6</div><div class="crayon-num" data-line="crayon-5751590e9dc84559397024-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751590e9dc84559397024-1"><span class="crayon-p">#include &lt;cmath&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc84559397024-2">&nbsp;</div><div class="crayon-line" id="crayon-5751590e9dc84559397024-3"><span class="crayon-c">// return true if the difference between a and b is within epsilon percent of the larger of a and b</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc84559397024-4"><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-e">approximatelyEqual</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">a</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">epsilon</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751590e9dc84559397024-5"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc84559397024-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">b</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">b</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">epsilon</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc84559397024-7"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0019 seconds] -->
<p></p>
<p>In this case, instead of using epsilon as an absolute number, we’re 
using epsilon as a multiplier, so its effect is relative to our inputs.</p>
<p>Let’s examine in more detail how the approximatelyEqual() function 
works.  On the left side of the &lt;= operator, the absolute value of a -
 b tells us the distance between a and b as a positive number.

On the right side of the &lt;= operator, we need to calculate the 
largest value of "close enough" we're willing to accept.  To do this, 
the algorithm chooses the larger of a and b (as a rough indicator of the
 overall magnitude of the numbers), and then multiplies it by epsilon.  
In this function, epsilon represents a percentage.  For example, if we 
want to say "close enough" means a and b are within 1% of the larger of a
 and b, we pass in an epsilon of 1% (1% = 1/100 = 0.01).  The value for 
epsilon can be adjusted to whatever is most appropriate for the 
circumstances (e.g. 0.01% = an epsilon of 0.0001).

To do inequality (!=) instead of equality, simply call this function and
 use the logical NOT operator (!) to flip the result:

</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751590e9dc91346926992" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751590e9dc91346926992-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc91346926992-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751590e9dc91346926992-1"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-o">!</span><span class="crayon-e">approximatelyEqual</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0.001</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc91346926992-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">a</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is not equal to "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p>

Note that while the approximatelyEqual() function will work for many 
cases, it is not perfect, especially as the numbers approach zero:

</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751590e9dc9b019125741" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751590e9dc9b019125741-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc9b019125741-2">2</div><div class="crayon-num" data-line="crayon-5751590e9dc9b019125741-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc9b019125741-4">4</div><div class="crayon-num" data-line="crayon-5751590e9dc9b019125741-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc9b019125741-6">6</div><div class="crayon-num" data-line="crayon-5751590e9dc9b019125741-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc9b019125741-8">8</div><div class="crayon-num" data-line="crayon-5751590e9dc9b019125741-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc9b019125741-10">10</div><div class="crayon-num" data-line="crayon-5751590e9dc9b019125741-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dc9b019125741-12">12</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751590e9dc9b019125741-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc9b019125741-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751590e9dc9b019125741-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc9b019125741-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// a is really close to 1.0, but has rounding errors, so it's slightly smaller than 1.0</span></div><div class="crayon-line" id="crayon-5751590e9dc9b019125741-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">a</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc9b019125741-6">&nbsp;</div><div class="crayon-line" id="crayon-5751590e9dc9b019125741-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// First, let's compare a (almost 1.0) to 1.0.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc9b019125741-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-e">approximatelyEqual</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1e</span><span class="crayon-o">-</span><span class="crayon-cn">8</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dc9b019125741-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc9b019125741-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Second, let's compare a-1.0 (almost 0.0) to 0.0</span></div><div class="crayon-line" id="crayon-5751590e9dc9b019125741-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-e">approximatelyEqual</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-o">-</span><span class="crayon-cn">1.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1e</span><span class="crayon-o">-</span><span class="crayon-cn">8</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dc9b019125741-12"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0029 seconds] -->
<p>

Perhaps surprisingly, this returns:


</p><pre>1
0
</pre>
<p>The second call didn’t perform as expected.  The math simply breaks down close to zero.</p>
<p>One way to avoid this is to use both an absolute epsilon (as we did 
in the first approach) and a relative epsilon (as we did in Knuth’s 
approach):</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751590e9dca6126539957" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751590e9dca6126539957-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dca6126539957-2">2</div><div class="crayon-num" data-line="crayon-5751590e9dca6126539957-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dca6126539957-4">4</div><div class="crayon-num" data-line="crayon-5751590e9dca6126539957-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dca6126539957-6">6</div><div class="crayon-num" data-line="crayon-5751590e9dca6126539957-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dca6126539957-8">8</div><div class="crayon-num" data-line="crayon-5751590e9dca6126539957-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dca6126539957-10">10</div><div class="crayon-num" data-line="crayon-5751590e9dca6126539957-11">11</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751590e9dca6126539957-1"><span class="crayon-c">// return true if the difference between a and b is less than absEpsilon, or within relEpsilon percent of the larger of a and b</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dca6126539957-2"><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-e">approximatelyEqualAbsRel</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">a</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">absEpsilon</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">relEpsilon</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751590e9dca6126539957-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dca6126539957-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Check if the numbers are really close -- needed when comparing numbers near zero.</span></div><div class="crayon-line" id="crayon-5751590e9dca6126539957-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">diff</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dca6126539957-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">diff</span><span class="crayon-h"> </span><span class="crayon-o">&lt;=</span><span class="crayon-h"> </span><span class="crayon-v">absEpsilon</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751590e9dca6126539957-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-t">true</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dca6126539957-8"><span class="crayon-h"> </span></div><div class="crayon-line" id="crayon-5751590e9dca6126539957-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Otherwise fall back to Knuth's algorithm</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dca6126539957-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">diff</span><span class="crayon-h"> </span><span class="crayon-o">&lt;=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">b</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">b</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">fabs</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">relEpsilon</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5751590e9dca6126539957-11"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0031 seconds] -->
<p></p>
<p>In this algorithm, we’ve added a new parameter: absEpsilon.  First, 
we check to see if the a and b are less than our absEpsilon, which 
should be set at something very small (e.g. 1e-12).  This handles the 
case where a and b are both close to zero.  If that fails, then we fall 
back to Knuth’s algorithm.</p>
<p>Here’s our previous code testing both algorithms:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-5751590e9dcb2880035303" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5751590e9dcb2880035303-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dcb2880035303-2">2</div><div class="crayon-num" data-line="crayon-5751590e9dcb2880035303-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dcb2880035303-4">4</div><div class="crayon-num" data-line="crayon-5751590e9dcb2880035303-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dcb2880035303-6">6</div><div class="crayon-num" data-line="crayon-5751590e9dcb2880035303-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dcb2880035303-8">8</div><div class="crayon-num" data-line="crayon-5751590e9dcb2880035303-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5751590e9dcb2880035303-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5751590e9dcb2880035303-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dcb2880035303-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5751590e9dcb2880035303-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dcb2880035303-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// a is really close to 1.0, but has rounding errors</span></div><div class="crayon-line" id="crayon-5751590e9dcb2880035303-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">a</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">0.1</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dcb2880035303-6">&nbsp;</div><div class="crayon-line" id="crayon-5751590e9dcb2880035303-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-e">approximatelyEqual</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1e</span><span class="crayon-o">-</span><span class="crayon-cn">8</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-c">// compare "almost 1.0" to 1.0</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dcb2880035303-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-e">approximatelyEqual</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-o">-</span><span class="crayon-cn">1.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1e</span><span class="crayon-o">-</span><span class="crayon-cn">8</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// compare "almost 0.0" to 0.0</span></div><div class="crayon-line" id="crayon-5751590e9dcb2880035303-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-e">approximatelyEqualAbsRel</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-o">-</span><span class="crayon-cn">1.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1e</span><span class="crayon-o">-</span><span class="crayon-cn">12</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1e</span><span class="crayon-o">-</span><span class="crayon-cn">8</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// compare "almost 0.0" to 0.0</span></div><div class="crayon-line crayon-striped-line" id="crayon-5751590e9dcb2880035303-10"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0073 seconds] -->
<p></p>
<pre>1
0
1
</pre>
<p>You can see that with an appropriately picked absEpsilon, approximatelyEqualAbsRel() handles the small inputs correctly.</p>
<p>Comparison of floating point numbers is a difficult topic, and 
there’s no “one size fits all” algorithm that works for every case.  
However, the approximatelyEqualAbsRel() should be good enough to handle 
most cases you’ll encounter.</p>
<table border="0" cellpadding="3">
<tbody><tr><td>
	<a href="http://www.learncpp.com/cpp-tutorial/36-logical-operators/" rel="external"><img src="Learn%20C++%20%C2%BB%203.5%20%E2%80%94%20Relational%20operators%20%28comparisons%29%20%C2%BB%20Print_files/next.png" align="middle"> 3.6 -- Logical operators</a> <sup>[3]</sup>
</td></tr>
<tr><td>
        <a href="http://www.learncpp.com/#Chapter0" rel="external"><img src="Learn%20C++%20%C2%BB%203.5%20%E2%80%94%20Relational%20operators%20%28comparisons%29%20%C2%BB%20Print_files/up.png" align="middle"> Index</a> <sup>[4]</sup>
</td></tr>
<tr><td>
	<a href="http://www.learncpp.com/cpp-tutorial/34-sizeof-comma-and-conditional-operators/" rel="external"><img src="Learn%20C++%20%C2%BB%203.5%20%E2%80%94%20Relational%20operators%20%28comparisons%29%20%C2%BB%20Print_files/prev.png" align="middle"> 3.4 -- Sizeof, comma, and conditional operators</a> <sup>[5]</sup>
</td></tr>
</tbody></table>

<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a href="http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/?share=email" rel="external"><span>Email</span></a> <sup>[6]</sup></li><li class="share-facebook"><a href="http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/?share=facebook" rel="external"><span>Facebook</span></a> <sup>[7]</sup></li><li class="share-twitter"><a href="http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/?share=twitter" rel="external"><span>Twitter</span></a> <sup>[8]</sup></li><li class="share-google-plus-1"><a href="http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/?share=google-plus-1" rel="external"><span>Google</span></a> <sup>[9]</sup></li><li class="share-pinterest"><a href="http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/?share=pinterest" rel="external"><span>Pinterest</span></a> <sup>[10]</sup></li><li class="share-end"></li></ul></div></div></div><div class="code-block code-block-2" style="float:left;margin:8px 8px 8px 0px;"><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div>
		</div>

		
	<div class="comments">
			</div>
	
	<footer class="footer">
		<p>
			Article printed from 
			Learn C++: 

			<strong dir="ltr">
				http://www.learncpp.com			</strong>
		</p>

		<p>
			URL to article: 
			<strong dir="ltr">
				http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/			</strong>
		</p>
		
					<p>URLs in this post:</p><p style="margin: 2px 0;">[1] 2.5 -- floating point numbers: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/25-floating-point-numbers/</span></b></p><p style="margin: 2px 0;">[2] Donald Knuth: <b><span dir="ltr">http://en.wikipedia.org/wiki/Donald_Knuth</span></b></p><p style="margin: 2px 0;">[3] Image: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/36-logical-operators/</span></b></p><p style="margin: 2px 0;">[4] Image: <b><span dir="ltr">http://www.learncpp.com/#Chapter0</span></b></p><p style="margin: 2px 0;">[5] Image: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/34-sizeof-comma-and-conditional-operators/</span></b></p><p style="margin: 2px 0;">[6] <span>Email</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/?share=email</span></b></p><p style="margin: 2px 0;">[7] <span>Facebook</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/?share=facebook</span></b></p><p style="margin: 2px 0;">[8] <span>Twitter</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/?share=twitter</span></b></p><p style="margin: 2px 0;">[9] <span>Google</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/?share=google-plus-1</span></b></p><p style="margin: 2px 0;">[10] <span>Pinterest</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/35-relational-operators-comparisons/?share=pinterest</span></b></p><p></p>
		
		<p style="text-align: right;" id="print-link">
			<a href="#Print" onclick="window.print(); return false;" title="Click here to print.">
				Click 
				here				to print.			</a> 
		</p>

		
		<p style="text-align: center;">
			Copyright © 2015 Learn C++. All rights reserved.		</p>
	</footer>

</main>








</body></html>
<!-- Dynamic page generated in 5.901 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-06-03 02:16:47 -->
<!-- Compression = gzip -->