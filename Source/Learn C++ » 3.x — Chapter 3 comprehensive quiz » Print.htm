<!DOCTYPE html>
<html lang="en"><head>
	<title>Learn C++  » 3.x — Chapter 3 comprehensive quiz » Print</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta name="Robots" content="noindex, nofollow">
			<link rel="stylesheet" href="Learn%20C++%20%C2%BB%203.x%20%E2%80%94%20Chapter%203%20comprehensive%20quiz%20%C2%BB%20Print_files/print-css.css" type="text/css" media="screen, print">
			<link rel="canonical" href="http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/">
</head>
<body>

<main role="main" class="center">

	
		<header class="entry-header">

			<span class="hat">
				<strong>
					- Learn C++ 
					- 
					<span dir="ltr">http://www.learncpp.com</span> 
					-
				</strong>
			</span>
			
			<div class="code-block code-block-1" style="float:left;margin:8px 8px 8px 0px;"><div class="ABD_display_wrapper ABD_shortcode_571576a3d515d"><div class="ABD_display ABD_display_noadblock"><div class="cf_monitor">
<script src="Learn%20C++%20%C2%BB%203.x%20%E2%80%94%20Chapter%203%20comprehensive%20quiz%20%C2%BB%20Print_files/ca-pub-0588844875925051.js"></script><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript" src="Learn%20C++%20%C2%BB%203.x%20%E2%80%94%20Chapter%203%20comprehensive%20quiz%20%C2%BB%20Print_files/show_ads.js">
</script><ins id="aswift_0_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" frameborder="0" height="280" width="336"></iframe></ins></ins>
</div></div><div class="ABD_display ABD_display_adblock" style="display: none;"><div style="width: 336px; height: 280px; display: inline-block; margin: 15px; padding: 15px; border-width: 1px; border-style: solid">
  <p>Hi there.</p>
  
  <p>It looks like you're using an ad blocker.</p>

  <p>That's okay.  But we would like you to know that we are able to keep this content free and updated because we're ad supported.</p>
  
  <p>If you're finding our content valuable, please consider supporting us by disabling your ad blocker for just this site.</p>

  <p>Thanks,</p>

  <p>Alex<br>LearnCpp.com</p>
</div></div></div></div>
			<h1 class="entry-title">
				3.x — Chapter 3 comprehensive quiz			</h1>

			<span class="entry-date">

				Posted By 

				<cite>Alex</cite> 

				On 

				<time>	
					September 11, 2011 @ 5:02 pm 
				</time>

			  	<span>
			  		In 
			  		C++ Tutorial | 
			  	</span>	

		  		<a href="#comments_controls">
		  			16 Comments	  			</a>	  			

				</span>
			
		</header>	

		<div class="entry-content">

			<p><strong>Quick review</strong></p>
<p>Always use parentheses to disambiguate the precedence of operators if there is any question or opportunity for confusion.</p>
<p>The arithmetic operators all work like they do in normal mathematics.
  The Modulus (%) operator returns the remainder from an integer 
division.  Beware about rounding or sign errors when the operands of 
integer division and modulus are negative.</p>
<p>The increment and decrement operators can be used to easily increment
 or decrement numbers.  Beware of side effects, particular when it comes
 to the order that function parameters are evaluated.  Do not use a 
variable that has a side effect applied more than once in a given 
statement.</p>
<p>Relational operators can be used to compare floating point numbers.  
Beware using equality and inequality on floating point numbers.</p>
<p>Logical operators allow us to form compound conditional statements.  
Bitwise operators allow us to modify or query individual bits.</p>
<p><strong>Comprehensive quiz</strong></p>
<p>1) Evaluate the following:</p>
<p>a) (5 &gt; 3 &amp;&amp; 4 &lt; 8)<br>
b) (4 &gt; 6 &amp;&amp; true)<br>
c) (3 &gt;= 3 || false)<br>
d) (true || false) ? 4 : 5</p>
<p><a href="http://www.learncpp.comjavascript:void%280%29" rel="external">Show Solution</a> <sup>[1]</sup></p>
<div class="solution_div" id="id1511462584" style="display:none">
a) (5 &gt; 3 &amp;&amp; 4 &lt; 8) becomes (true &amp;&amp; true), which is true.<br>
b) (4 &gt; 6 &amp;&amp; true) becomes (false &amp;&amp; true), which is false.<br>
c) (3 &gt;= 3 || false) becomes (true || false), which is true.<br>
d) (true || false) ? 4 : 5 becomes (true ? 4 : 5), which is 4.
</div>
<p>2) Answer the following:</p>
<p>a) 7 / 4<br>
b) 14 % 5</p>
<p><a href="http://www.learncpp.comjavascript:void%280%29" rel="external">Show Solution</a> <sup>[1]</sup></p>
<div class="solution_div" id="id604403988" style="display:none">
a) 7 / 4 = 1 remainder 3, so this equals 1.<br>
b) 14 % 5 = 2 remainder 4, so this equals 4.
</div>
<p>3) Convert the following from binary to decimal:<br>
a) 1101<br>
b) 101110</p>
<p><a href="http://www.learncpp.comjavascript:void%280%29" rel="external">Show Solution</a> <sup>[1]</sup></p>
<div class="solution_div" id="id1772881810" style="display:none">
a) 1101 is ((1 * 8) + (1 * 4) + (0 * 2) + (1 * 1)) = 8 + 4 + 1 = 13<br>
b) 101110 is ((1 * 32) + (0 * 16) + (1 * 8) + (1 * 4) + (1 * 2) + (0 * 1)) = 32 + 8 + 4 + 2 = 46
</div>
<p>4) Convert the following from decimal to binary:<br>
a) 15<br>
b) 53</p>
<p><a href="http://www.learncpp.comjavascript:void%280%29" rel="external">Show Solution</a> <sup>[1]</sup></p>
<div class="solution_div" id="id1146205643" style="display:none">
a) Using method 1:<br>
15 / 2 = 7 r1<br>
7 / 2 = 3 r1<br>
3 / 2 = 1 r1<br>
1 / 2 = 0 r1<p></p>
<p>Reading the remainders from bottom to top: 1111</p>
<p>Using method 2:</p>
<p>Is 15 &gt;= 8?  Yes, with 7 left over.<br>
Is 7 &gt;= 4?  Yes, with 3 left over.<br>
Is 3 &gt;= 2?  Yes, with 1 left over.<br>
Is 1 &gt;= 1?  Yes.<br>
So this number is 1111 in binary.</p>
<p>b) Using method 1:<br>
53 / 2 = 26 r1<br>
26 / 2 = 13 r0<br>
13 / 2 = 6 r1<br>
6 / 2 = 3 r0<br>
3 / 2 = 1 r1<br>
1 / 2 = 0 r1</p>
<p>Reading the remainders from bottom to top: 110101</p>
<p>Using method 2:</p>
<p>Is 53 &gt;= 32?  Yes, with 21 left over.<br>
Is 21 &gt;= 16?  Yes, with 5 left over.<br>
Is 5 &gt;= 8?  No.<br>
Is 5 &gt;= 4?  Yes, with 1 left over.<br>
Is 1 &gt; 2?  No.<br>
Is 1 &gt;=1?  Yes.</p>
<p>So this number is 110101 in binary.
</p></div>
<p>5) Why should you never do the following:<br>
a) int y = foo(++x, x);<br>
b) int x = 7 / -2; // (prior to C++11)<br>
c) int x = -5 % 2; // (prior to C++11)<br>
d) float x = 0.1 + 0.1; if (x == 0.2) return true; else return false;<br>
e) int x = 3 / 0;</p>
<p><a href="http://www.learncpp.comjavascript:void%280%29" rel="external">Show Solution</a> <sup>[1]</sup></p>
<div class="solution_div" id="id990112206" style="display:none">
a) Because operator++ applies a side effect to x, we should not use x 
again in the same expression.  In this case, the parameters to function 
foo() can be evaluated in any order, so it’s indeterminate whether x or 
++x gets evaluated first.  Because ++x changes the value of x, it’s 
unclear what values will be passed into the function.<br>
b) Prior to C++11, it’s unclear whether the compiler will round this up to -3 or down to -4.<br>
c) Prior to C++11, it’s unclear whether this will result in 1 or -1.<br>
d) Floating point errors will cause this to evaluate as false even though it looks like it should be true.<br>
e) Divide by 0 will crash the program.
</div>
<table border="0" cellpadding="3">
<tbody><tr><td>
	<a href="http://www.learncpp.com/cpp-tutorial/41-blocks-compound-statements/" rel="external"><img src="Learn%20C++%20%C2%BB%203.x%20%E2%80%94%20Chapter%203%20comprehensive%20quiz%20%C2%BB%20Print_files/next.png" align="middle"> 4.1 -- Blocks (compound statements)</a> <sup>[2]</sup>
</td></tr>
<tr><td>
        <a href="http://www.learncpp.com/#Chapter0" rel="external"><img src="Learn%20C++%20%C2%BB%203.x%20%E2%80%94%20Chapter%203%20comprehensive%20quiz%20%C2%BB%20Print_files/up.png" align="middle"> Index</a> <sup>[3]</sup>
</td></tr>
<tr><td>
	<a href="http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/" rel="external"><img src="Learn%20C++%20%C2%BB%203.x%20%E2%80%94%20Chapter%203%20comprehensive%20quiz%20%C2%BB%20Print_files/prev.png" align="middle"> 3.8a -- Bit flags and bit masks</a> <sup>[4]</sup>
</td></tr>
</tbody></table>

<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a href="http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/?share=email" rel="external"><span>Email</span></a> <sup>[5]</sup></li><li class="share-facebook"><a href="http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/?share=facebook" rel="external"><span>Facebook</span></a> <sup>[6]</sup></li><li class="share-twitter"><a href="http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/?share=twitter" rel="external"><span>Twitter</span></a> <sup>[7]</sup></li><li class="share-google-plus-1"><a href="http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/?share=google-plus-1" rel="external"><span>Google</span></a> <sup>[8]</sup></li><li class="share-pinterest"><a href="http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/?share=pinterest" rel="external"><span>Pinterest</span></a> <sup>[9]</sup></li><li class="share-end"></li></ul></div></div></div><div class="code-block code-block-2" style="float:left;margin:8px 8px 8px 0px;"><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div>
		</div>

		
	<div class="comments">
			</div>
	
	<footer class="footer">
		<p>
			Article printed from 
			Learn C++: 

			<strong dir="ltr">
				http://www.learncpp.com			</strong>
		</p>

		<p>
			URL to article: 
			<strong dir="ltr">
				http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/			</strong>
		</p>
		
					<p>URLs in this post:</p><p style="margin: 2px 0;">[1] Show Solution: <b><span dir="ltr">http://www.learncpp.comjavascript:void(0)</span></b></p><p style="margin: 2px 0;">[2] Image: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/41-blocks-compound-statements/</span></b></p><p style="margin: 2px 0;">[3] Image: <b><span dir="ltr">http://www.learncpp.com/#Chapter0</span></b></p><p style="margin: 2px 0;">[4] Image: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-8a-bit-flags-and-bit-masks/</span></b></p><p style="margin: 2px 0;">[5] <span>Email</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/?share=email</span></b></p><p style="margin: 2px 0;">[6] <span>Facebook</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/?share=facebook</span></b></p><p style="margin: 2px 0;">[7] <span>Twitter</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/?share=twitter</span></b></p><p style="margin: 2px 0;">[8] <span>Google</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/?share=google-plus-1</span></b></p><p style="margin: 2px 0;">[9] <span>Pinterest</span>: <b><span dir="ltr">http://www.learncpp.com/cpp-tutorial/3-x-comprehensive-quiz/?share=pinterest</span></b></p><p></p>
		
		<p style="text-align: right;" id="print-link">
			<a href="#Print" onclick="window.print(); return false;" title="Click here to print.">
				Click 
				here				to print.			</a> 
		</p>

		
		<p style="text-align: center;">
			Copyright © 2015 Learn C++. All rights reserved.		</p>
	</footer>

</main>








</body></html>
<!-- Dynamic page generated in 2.015 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-06-03 02:17:39 -->
<!-- Compression = gzip -->